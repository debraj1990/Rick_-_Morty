{"version":3,"sources":["containers/PaginationComp/PaginationComp.css","components/FilterCard/FilterCard.css","containers/Layout/Layout.css","containers/SideFilter/SideFilter.css","components/SearchHeaderBar/SearchHeaderBar.css","components/Character/Character.css","components/Header/Header.css","App.css","HOC/Aux_container.js","components/Header/Header.js","components/FilterCard/FilterCard.js","store/actions/species.js","store/types/species.js","store/actions/gender.js","store/types/gender.js","store/actions/status.js","store/types/status.js","connect.js","store/reducers/characters.js","store/reducers/characterType.js","store/reducers/currentPage.js","store/reducers/gender.js","store/reducers/name.js","store/reducers/orderBy.js","store/reducers/species.js","store/reducers/status.js","store/reducers/totalPage.js","store/reducers/Loader.js","store/reducers/reducer.js","store/types/characters.js","store/types/characterType.js","store/types/page.js","store/types/name.js","store/types/orderBy.js","store/types/loader.js","store/store.js","store/actions/characters.js","store/actions/loader.js","store/actions/characterType.js","store/actions/currentPage.js","containers/SideFilter/SideFilter.js","components/SelectedFilters/SelectedFilters.js","components/SearchHeaderBar/SearchHeaderBar.js","components/Character/Character.js","containers/CharacterDetails/CharacterDetails.js","containers/CharacterDataBuilder/CharacterDataBuilder.js","store/actions/name.js","store/actions/sort.js","store/actions/totalPage.js","containers/PaginationComp/PaginationComp.js","containers/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","Header","className","style","navbardiv","FilterCard","filterCard","cardbdy","characterType","type","cbody","data","map","checkrow","index","key","checkbox","onClick","$event","getFilter","target","checked","id","title","isChecked","onChange","htmlFor","addSpecies","payload","deleteSpecies","addGender","deleteGender","addStatus","deleteStatus","client","ApolloClient","uri","initialState","characters","getCharacters","state","slice","getCharacterType","currentPage","getCurrentPage","resetCurrentPage","gender","getGender","removeGender","name","getName","orderBy","getOrderBy","species","getSpecies","removeSpecies","status","getStatus","removeStatus","totalPage","getTotalPage","loader","getLoader","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","addCharacters","addTotalPage","fetchCharacters","getState","dispatch","page","query","gql","then","res","orderRes","sortedRes","results","sort","a","b","Date","created","info","count","catch","addCharacterType","addCurrentPage","SideFilter","clickedEl","row","String","toLowerCase","add_species","value","delete_species","add_gender","delete_gender","add_status","delete_status","removeChecked","reset_currentPage","get_characters","checkVals","find","x","forEach","element","push","tempstate","add_characterType","sidebarcontainer","sidebarlogo","this","ctype","Component","mapDispatchToProps","AppContainer","connect","filterChip","speciesValue","removeFilter","width","height","viewBox","fill","xmlns","fillRule","d","clipRule","SelectedFilters","speciesFilter","removeSelectedFilter","genderFilter","statusFilter","SearchHeaderBar","inputName","React","useRef","crd","getData","onKeyPress","ref","searchButton","current","getOrder","Character","noResult","char","cardStyle","src","image","alt","display","paddingLeft","fontSize","tableLayout","border","scope","createdDate","origin","location","CharacterDetails","calculateCreatedDate","today","moment","format","subtract","fromNow","characterData","length","eachChar","CharacterDataBuilder","add_service","addName","addOrderBy","PaginationComp","pageNumber","add_currentPage","navpage","activeLinkClass","activeitem","activeClass","disabledClass","pageItem","itemClass","linkClass","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","handlePageChange","bind","add_totalpage","Layout","add_name","add_orderBy","overlay","updatedFilter","jumbo","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.c1e77e5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navpage\":\"PaginationComp__navpage___1vajy\",\"paginationStyle\":\"PaginationComp__paginationStyle___TGLGz\",\"activeitem\":\"PaginationComp__activeitem___KxDfS\",\"pageItem\":\"PaginationComp__pageItem___2vM0f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardbdy\":\"FilterCard__cardbdy___3uZrV\",\"cbody\":\"FilterCard__cbody___1XjGJ\",\"header\":\"FilterCard__header___19z1R\",\"checkbox\":\"FilterCard__checkbox___2x3wh\",\"filterCard\":\"FilterCard__filterCard___2TL-5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentcontainer\":\"Layout__contentcontainer___31I3f\",\"jumbo\":\"Layout__jumbo___rcusj\",\"loader\":\"Layout__loader___3xE1d\",\"spin\":\"Layout__spin___1DfUC\",\"overlay\":\"Layout__overlay___1E0M4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebarcontainer\":\"SideFilter__sidebarcontainer___3o-50\",\"sidebarlogo\":\"SideFilter__sidebarlogo___2hDox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"crd\":\"SearchHeaderBar__crd___O2XLZ\",\"searchButton\":\"SearchHeaderBar__searchButton___3Mn8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"char\":\"Character__char___2xqKc\",\"cardStyle\":\"Character__cardStyle___1T9OB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbardiv\":\"Header__navbardiv___1cpH5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App___1o-Fp\"};","// its a func componet which gets props as input\r\n//  and return props children\r\n// you can use props.children on \r\n// components that represent ‘generic boxes’ \r\n// and that ‘don’t know their children ahead of time’.\r\n\r\nconst aux = (props) => props.children ;\r\nexport default aux;","import React from \"react\";\r\n\r\nimport style from './Header.css'\r\n\r\nconst Header = props => {\r\n    return (\r\n        <nav className={style.navbardiv}>\r\n            <span className=\"navbar-brand mb-1 h1 ml-4\">Rick and Morty</span>\r\n        </nav>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Header;","import React from \"react\";\r\nimport style from './FilterCard.css'\r\n\r\n\r\nconst FilterCard = props => {\r\n\r\n\treturn (\r\n\t\t<div className={style.filterCard}>\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<div className={`${style.cardbdy} card`}>\r\n\t\t\t\t\t\t\t\t<h5 className=\"card-header\" > {props.characterType.type}\t</h5>\r\n\t\t\t\t\t\t\t\t<div className={`${style.cbody} card-body`}>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tprops.characterType.data.map(\r\n\t\t\t\t\t\t\t\t\t\t\t(checkrow, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\" key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`${style.checkbox} form-check-input`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={($event) => props.getFilter($event.target.checked, checkrow, props.characterType.type)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={checkrow.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={checkrow.isChecked}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => { }} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-check-label checkrow\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thtmlFor={checkrow.title}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{checkrow.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\nexport default FilterCard;","import { ADD_SPECIES,DELETE_SPECIES } from \"../types/types\";\r\n\r\n\r\nexport   const addSpecies = (payload) => {\r\n\r\n    return {\r\n        type: ADD_SPECIES,\r\n        payload: payload\r\n    };\r\n}\r\n\r\n\r\nexport const deleteSpecies = (payload) => {\r\n\r\n    return {\r\n        type: DELETE_SPECIES,\r\n        payload: payload\r\n    };\r\n\r\n}\r\n\r\nexport default addSpecies;\r\n\r\n","export const ADD_SPECIES = 'ADD_SPECIES';\r\nexport const DELETE_SPECIES = 'DELETE_SPECIES';","import { ADD_GENDER,DELETE_GENDER} from \"../types/types\";\r\n\r\n\r\nexport   const addGender = (payload) => {\r\n    \r\n\r\n    return {\r\n        type: ADD_GENDER,\r\n        payload: payload\r\n    };\r\n\r\n}\r\n\r\n\r\nexport const deleteGender = (payload) => {\r\n    \r\n\r\n    return {\r\n        type: DELETE_GENDER,\r\n        payload: payload\r\n    };\r\n\r\n}\r\n\r\nexport default addGender;\r\n\r\n","export const ADD_GENDER = 'ADD_GENDER';\r\nexport const DELETE_GENDER = 'DELETE_GENDER';","import { ADD_STATUS,DELETE_STATUS} from \"../types/types\";\r\n\r\n\r\nexport   const addStatus = (payload) => {\r\n    \r\n\r\n    return {\r\n        type: ADD_STATUS,\r\n        payload: payload\r\n    };\r\n\r\n}\r\n\r\n\r\nexport const deleteStatus= (payload) => {\r\n    \r\n\r\n    return {\r\n        type: DELETE_STATUS,\r\n        payload: payload\r\n    };\r\n\r\n}\r\n\r\nexport default addStatus;\r\n\r\n","export const ADD_STATUS = 'ADD_STATUS';\r\nexport const DELETE_STATUS = 'DELETE_STATUS';","import ApolloClient from 'apollo-boost';\r\n\r\nconst client = new ApolloClient({\r\n    uri: 'https://rickandmortyapi.com/graphql/',\r\n  });\r\n\r\n  export default client;","import { ADD_CHARACTERS } from '../types/types';\r\n\r\nconst initialState = {\r\n    characters: []\r\n}\r\nconst getCharacters = (state, payload) => ({\r\n    ...state,\r\n    characters: payload.slice()\r\n});\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ADD_CHARACTERS:\r\n            return getCharacters(state, payload);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { ADD_CHARACTERTYPE } from '../types/types';\r\n\r\n\r\n\r\nconst initialState = {\r\n    characterType: []\r\n}\r\n\r\n\r\nconst getCharacterType = (state, payload) => ({\r\n    ...state,\r\n    characterType: payload\r\n})\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ADD_CHARACTERTYPE:\r\n            return getCharacterType(state, payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    ADD_CURRENT_PAGE,\r\n    RESET_CURRENT_PAGE\r\n  } from '../types/types';\r\n  \r\n  const initialState = {\r\n    currentPage: 1\r\n  };\r\n  \r\n\r\n  const getCurrentPage = (state, payload) => ({\r\n    ...state,\r\n    currentPage: payload\r\n  })\r\n\r\n  \r\n  const resetCurrentPage = (state, payload) => ({\r\n    ...state,\r\n    currentPage: 1\r\n  })\r\n\r\n\r\n  export default (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case ADD_CURRENT_PAGE:\r\n        return getCurrentPage(state, payload);\r\n      case RESET_CURRENT_PAGE:\r\n        return resetCurrentPage(state, payload);\r\n        default:\r\n          return state;\r\n    }\r\n  };","import {\r\n    ADD_GENDER,\r\n    DELETE_GENDER\r\n} from '../types/types';\r\n\r\nconst initialState = {\r\n    gender: ''\r\n}\r\n\r\n\r\nconst getGender = (state, payload) => ({\r\n    ...state,\r\n    gender: payload\r\n});\r\n\r\nconst removeGender = (state) => ({\r\n    ...state,\r\n    gender: ''\r\n})\r\n\r\nexport default (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ADD_GENDER:\r\n            return getGender(state, payload);\r\n        case DELETE_GENDER:\r\n            return removeGender(state);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_NAME } from '../types/types';\r\n\r\nconst initialState = {\r\n    name: ''\r\n};\r\n\r\n\r\nconst getName = (state, payload) => ({\r\n    ...state,\r\n    name: payload\r\n});\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ADD_NAME:\r\n            return getName(state, payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ADD_ORDER_BY } from '../types/types';\r\n\r\n\r\nconst initialState = {\r\n    orderBy: 'ascending'\r\n}\r\n\r\n\r\nconst getOrderBy = (state, payload) => ({\r\n    ...state,\r\n    orderBy: payload\r\n});\r\n\r\nexport default (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ADD_ORDER_BY:\r\n            return getOrderBy(state, payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    DELETE_SPECIES,\r\n    ADD_SPECIES\r\n} from '../types/types';\r\n\r\n\r\nconst initialState = {\r\n    species: ''\r\n};\r\n\r\n\r\n\r\nconst getSpecies = (state, payload) => ({\r\n    ...state,\r\n    species: payload\r\n});\r\n\r\nconst removeSpecies = (state) => ({\r\n    ...state,\r\n    species: ''\r\n});\r\n\r\nexport default (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ADD_SPECIES:\r\n            return getSpecies(state, payload);\r\n        case DELETE_SPECIES:\r\n            return removeSpecies(state);\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    ADD_STATUS,\r\n    DELETE_STATUS\r\n}\r\nfrom '../types/types';\r\n\r\nconst initialState = {\r\n    status: ''\r\n}\r\n\r\nconst getStatus = (state, payload) => ({\r\n    ...state,\r\n    status: payload\r\n});\r\n\r\nconst removeStatus = (state) => ({\r\n    ...state,\r\n    status: ''\r\n});\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n    const {\r\n        type,\r\n        payload\r\n    } = action;\r\n    switch (type) {\r\n        case ADD_STATUS:\r\n            return getStatus(state, payload);\r\n        case DELETE_STATUS:\r\n            return removeStatus(state);\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ADD_TOTAL_PAGE} from '../types/types';\r\n\r\nconst initialState = {\r\n    totalPage: 59\r\n};\r\n\r\n\r\nconst getTotalPage = (state, payload) => ({\r\n    ...state,\r\n    totalPage: payload\r\n})\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ADD_TOTAL_PAGE:\r\n            return getTotalPage(state, payload);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    ENABLE_LOADER,\r\n    DISABLE_LOADER\r\n} from '../types/types';\r\n\r\n\r\nconst initialState = {\r\n    loader: false\r\n};\r\n\r\n\r\n\r\nconst getLoader = (state, payload) => ({\r\n    ...state,\r\n    loader: payload\r\n});\r\n\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ENABLE_LOADER:\r\n            return getLoader(state, payload);\r\n        case DISABLE_LOADER:\r\n            return getLoader(state, payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\n\r\n\r\n// Dependencies\r\nimport { combineReducers } from 'redux';\r\n\r\n// Shared Reducers\r\nimport characters from './characters';\r\nimport characterType from './characterType';\r\nimport currentPage from './currentPage';\r\nimport gender from './gender';\r\nimport name from './name';\r\nimport orderBy from './orderBy';\r\nimport species from './species';\r\nimport status from './status';\r\nimport totalPage from './totalPage';\r\nimport loader from './Loader';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  characters: characters,\r\n  characterType: characterType,\r\n  currentPage: currentPage,\r\n  gender: gender,\r\n  name: name,\r\n  orderBy: orderBy,\r\n  species: species,\r\n  status: status,\r\n  totalPage: totalPage,\r\n  loader: loader\r\n});\r\n\r\nexport default rootReducer;","export const ADD_CHARACTERS = 'ADD_CHARACTERS';\r\n","export const ADD_CHARACTERTYPE = 'ADD_CHARACTERTYPE';\r\n\r\n","export const ADD_CURRENT_PAGE = 'ADD_CURRENT_PAGE';\r\nexport const ADD_TOTAL_PAGE = 'ADD_TOTAL_PAGE';\r\nexport const RESET_CURRENT_PAGE = 'RESET_CURRENT_PAGE';\r\n","export const ADD_NAME = 'ADD_NAME';\r\n","export const ADD_ORDER_BY = 'ADD_ORDER_BY';","export const ENABLE_LOADER = 'ENABLE_LOADER';\r\nexport const DISABLE_LOADER = 'DISABLE_LOADER ';","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers/reducer';\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst initialState = {\r\n};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;","import {\r\n    ADD_CHARACTERS,\r\n    ADD_FAILURE,\r\n} from '../types/types';\r\nimport {enableLoader,disableLoader} from './loader';\r\nimport {\r\n    gql\r\n} from 'apollo-boost';\r\nimport client from '../../connect'\r\nimport store from '../store'\r\n\r\nimport { ADD_TOTAL_PAGE } from \"../types/types\";\r\n\r\nconst queryBuilder = (page, name, species, gender, status) => {\r\n    return (\r\n        gql\r\n            `{\r\n                characters (page: ${page.currentPage},filter:\r\n                     {  name: \"${name.name}\", \r\n                         gender: \"${gender.gender}\", \r\n                         species:  \"${species.species}\",\r\n                         status:  \"${status.status}\" }){\r\n                            info {\r\n                                count\r\n                                pages\r\n                                next\r\n                                prev\r\n                              }\r\n                    results {\r\n                        name,\r\n                        id,\r\n                        status,\r\n                        species,\r\n                        type,\r\n                        gender,\r\n                        origin {\r\n                            name\r\n                        },\r\n                        location {\r\n                            name\r\n                        },\r\n                        image,\r\n                        created\r\n                    }\r\n                    }\r\n                }`\r\n    )\r\n}\r\n\r\nexport const fetchCharacters = () => {\r\n    var data = store.getState();\r\n    // add loader\r\n  \r\n    return dispatch => {\r\n        dispatch(enableLoader());\r\n        client.query({\r\n            query: queryBuilder(data.currentPage, data.name, data.species, data.gender, data.status)\r\n        }).then(\r\n            res => {\r\n                var orderRes = data.orderBy.orderBy === 'ascending' ? 1 : -1;\r\n                var sortedRes = res.data.characters.results.sort((a, b) => orderRes * (new Date(a.created) - new Date(b.created)));\r\n\r\n                dispatch(addCharacters(sortedRes));\r\n                dispatch(addTotalPage(res.data.characters.info.count));\r\n                // remove loader\r\n                dispatch(disableLoader());\r\n            }\r\n        ).catch(() => {\r\n            dispatch(disableLoader());\r\n            dispatch(addCharacters([]));\r\n        })\r\n    };\r\n}\r\n\r\nexport const addCharacters = (payload) => {\r\n    return {\r\n        type: ADD_CHARACTERS,\r\n        payload: payload\r\n    };\r\n}\r\n\r\nexport const addFailure = error => ({\r\n    type: ADD_FAILURE,\r\n    payload: {\r\n        error\r\n    }\r\n});\r\n\r\nexport const addTotalPage = (payload) => {\r\n    return {\r\n        type: ADD_TOTAL_PAGE,\r\n        payload: payload\r\n    };\r\n\r\n}\r\n\r\nexport default fetchCharacters;","import { ENABLE_LOADER,DISABLE_LOADER} from \"../types/types\";\r\n\r\n\r\nexport   const enableLoader = () => {\r\n\r\n    return {\r\n        type: ENABLE_LOADER,\r\n        payload: true\r\n    };\r\n}\r\n\r\n\r\nexport const disableLoader = () => {\r\n\r\n    return {\r\n        type: DISABLE_LOADER,\r\n        payload: false\r\n    };\r\n\r\n}\r\n\r\nexport default {enableLoader,disableLoader};\r\n\r\n","import { ADD_CHARACTERTYPE} from \"../types/types\";\r\n\r\n\r\nexport   const addCharacterType = (payload) => {\r\n    return {\r\n        type: ADD_CHARACTERTYPE,\r\n        payload: payload\r\n    };\r\n\r\n}\r\n\r\n\r\nexport default addCharacterType;\r\n","import { ADD_CURRENT_PAGE, RESET_CURRENT_PAGE} from \"../types/types\";\r\n\r\n\r\nexport   const addCurrentPage = (payload) => {\r\n    return {\r\n        type: ADD_CURRENT_PAGE,\r\n        payload: payload\r\n    };\r\n\r\n}\r\n\r\nexport   const resetCurrentPage = (payload) => {\r\n\r\n    return {\r\n        type: RESET_CURRENT_PAGE,\r\n        payload: 1\r\n    };\r\n\r\n}\r\n\r\n\r\nexport default {addCurrentPage,resetCurrentPage};\r\n\r\n","import React, { Component } from \"react\";\r\nimport FilterCard from '../../components/FilterCard/FilterCard'\r\nimport style from './SideFilter.css'\r\nimport { connect } from \"react-redux\";\r\nimport { addSpecies, deleteSpecies } from '../../store/actions/species';\r\nimport { addGender, deleteGender } from '../../store/actions/gender';\r\nimport { addStatus, deleteStatus } from '../../store/actions/status';\r\nimport fetchCharacters from '../../store/actions/characters';\r\nimport addCharacterType from '../../store/actions/characterType';\r\nimport { resetCurrentPage } from '../../store/actions/currentPage';\r\n\r\n\r\nexport class SideFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var characterType = [\r\n            {\r\n                type: 'Species',\r\n                data: [\r\n                    {\r\n                        title: 'Human',\r\n                        value: 'human',\r\n                        isChecked: false\r\n                    },\r\n                    {\r\n                        title: 'Alien',\r\n                        value: 'alien',\r\n                        isChecked: false\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: 'Gender',\r\n                data: [\r\n                    {\r\n                        title: 'Male',\r\n                        value: 'male',\r\n                        isChecked: false\r\n                    },\r\n                    {\r\n                        title: 'Female',\r\n                        value: 'female',\r\n                        isChecked: false\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: 'Status',\r\n                data: [\r\n                    {\r\n                        title: 'Unknown',\r\n                        value: 'unknown',\r\n                        isChecked: false\r\n                    },\r\n                    {\r\n                        title: 'Alive',\r\n                        value: 'alive',\r\n                        isChecked: false\r\n                    },\r\n                    {\r\n                        title: 'Dead',\r\n                        value: 'dead',\r\n                        isChecked: false\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n        this.props.add_characterType(characterType);\r\n    }\r\n\r\n\r\n    getFilter = (clickedEl, row, type) => {\r\n        if (String(type).toLowerCase() === 'species') {\r\n            if (clickedEl) {\r\n                this.props.add_species(row.value);\r\n            } else {\r\n                this.props.delete_species(row.value)\r\n            }\r\n\r\n        }\r\n\r\n        if (String(type).toLowerCase() === 'gender') {\r\n            if (clickedEl) {\r\n                this.props.add_gender(row.value);\r\n            } else {\r\n                this.props.delete_gender(row.value)\r\n            }\r\n\r\n        }\r\n\r\n        if (String(type).toLowerCase() === 'status') {\r\n            if (clickedEl) {\r\n                this.props.add_status(row.value);\r\n            } else {\r\n                this.props.delete_status(row.value)\r\n            }\r\n        }\r\n        this.removeChecked(row, type, clickedEl);\r\n        this.props.reset_currentPage();\r\n        this.props.get_characters();\r\n    }\r\n\r\n    removeChecked = (row, type, clickedEl) => {\r\n        var checkVals = [];\r\n        var rowdata = this.props.characterType.characterType.find(x => (x.type) === type);\r\n        // Replacing the isClicked state of the clicked element\r\n        rowdata.data.forEach(element => {\r\n            if (element.value === row.value) {\r\n                element.isChecked = clickedEl;\r\n            } else {\r\n                element.isChecked = false;\r\n            }\r\n\r\n            checkVals.push(element);\r\n        });\r\n\r\n        // Replacing the data field of specific type which is clicked\r\n        var tempstate = this.props.characterType.characterType;\r\n        tempstate.map(x => { return ((x.type) === type ? x.data = checkVals : x) })\r\n        this.props.add_characterType(tempstate);\r\n        this.props.reset_currentPage();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`${style.sidebarcontainer} mt-3`}>\r\n                <h2>Filters</h2>\r\n                <div className={`${style.sidebarlogo} mt-3`}>\r\n                    {this.props.characterType.characterType ?\r\n                        this.props.characterType.characterType\r\n                            .map((ctype, index) =>\r\n                                (\r\n                                    <FilterCard key={index} characterType={ctype} getFilter={this.getFilter}></FilterCard>\r\n                                )) : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    characters: state.characters,\r\n    species: state.species,\r\n    gender: state.gender,\r\n    name: state.name,\r\n    characterType: state.characterType\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    add_species: addSpecies,\r\n    delete_species: deleteSpecies,\r\n    add_gender: addGender,\r\n    delete_gender: deleteGender,\r\n    add_status: addStatus,\r\n    delete_status: deleteStatus,\r\n    get_characters: fetchCharacters,\r\n    add_characterType: addCharacterType,\r\n    reset_currentPage: resetCurrentPage\r\n};\r\n\r\n\r\nconst AppContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SideFilter);\r\n\r\nexport default AppContainer;","import React from 'react';\r\n\r\n\r\nconst filterChip = (speciesValue, removeFilter, type) => {\r\n    return (\r\n    <span className=\"badge badge-danger ml-1 text-capitalize\" >\r\n        {speciesValue}\r\n        <svg onClick={($event) => { removeFilter(type) }} className=\"bi bi-x\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fillRule=\"fillRule\" d=\"M11.854 4.146a.5.5 0 010 .708l-7 7a.5.5 0 01-.708-.708l7-7a.5.5 0 01.708 0z\" clipRule=\"clipRule\" />\r\n            <path fillRule=\"fillRule\" d=\"M4.146 4.146a.5.5 0 000 .708l7 7a.5.5 0 00.708-.708l-7-7a.5.5 0 00-.708 0z\" clipRule=\"clipRule\" />\r\n        </svg>\r\n    </span>);\r\n}\r\n\r\nconst SelectedFilters = (props) => {\r\n    return (\r\n        <div className=\"d-flex\">\r\n            {\r\n               props.speciesFilter &&  props.speciesFilter.species ?\r\n                    <div>\r\n                        <h5>\r\n                            {filterChip(props.speciesFilter.species, props.removeSelectedFilter, \"species\")}\r\n                        </h5>\r\n                    </div> : null\r\n            }\r\n            {\r\n            props.genderFilter && props.genderFilter.gender ? <div>\r\n                    <h5>\r\n                        {filterChip(props.genderFilter.gender, props.removeSelectedFilter, \"gender\")}\r\n                    </h5>\r\n                </div> : null\r\n            }\r\n            {\r\n              props.statusFilter && props.statusFilter.status ? <div>\r\n                    <h5>\r\n                        {filterChip(props.statusFilter.status, props.removeSelectedFilter, \"status\")}\r\n                    </h5>\r\n                </div> : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedFilters;","import React from \"react\";\r\nimport style from './SearchHeaderBar.css'\r\nimport SelectedFilters from '../SelectedFilters/SelectedFilters'\r\n\r\n\r\n\r\nconst SearchHeaderBar = props => {\r\n\r\n    const inputName = React.useRef();\r\n    const orderBy = React.useRef();\r\n\r\n    return (\r\n        <div className={`${style.crd} , card`}>\r\n            <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"selected-filters d-flex\" >\r\n                            {\r\n                                (props.speciesFilter || props.genderFilter || props.removeSelectedFilter) \r\n                                ? <SelectedFilters\r\n                                speciesFilter={props.speciesFilter}\r\n                                genderFilter={props.genderFilter}\r\n                                statusFilter={props.statusFilter}\r\n                                removeSelectedFilter={props.removeSelectedFilter} /> : null\r\n                            }\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label htmlFor=\"name\">Search by name:</label>\r\n                        <input type=\"text\" className=\"form-control d-inline-block\" id=\"name\"\r\n                            onChange={\r\n                                ($event) => { return (($event.key === 'Enter') ? props.getData($event.target.value) : null) }\r\n                            }\r\n                            onKeyPress={\r\n                                ($event) => { return (($event.key === 'Enter') ? props.getData($event.target.value) : null) }\r\n                            }\r\n                            ref={inputName} />\r\n                        <button type=\"submit\" className={style.searchButton}\r\n                            onClick={($event) => { props.getData(inputName.current.value) }}>\r\n                            Search </button>\r\n                    </div>\r\n                    <div className=\"col-md-4\"> </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"sel1\">Sort</label>\r\n                            <select ref={orderBy}\r\n                             className=\"sorting-cls\" \r\n                             onChange={($event) => { props.getOrder($event.target.value) }} className=\"form-control\" id=\"sel1\">\r\n                                <option value=\"ascending\">Ascending</option>\r\n                                <option value=\"descending\">Descending</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchHeaderBar;","import React from \"react\";\r\nimport style from \"./Character.css\";\r\n\r\n\r\n\r\nconst Character = props => {\r\n\r\n  if (!props.noResult) {\r\n    return (\r\n      <div>\r\n      <div className={style.char}>\r\n        <div className={`${style.cardStyle} card`} >\r\n          <img className=\"card-img-top\"\r\n            src={props.data.image}\r\n            alt=\"name\" />\r\n          <div className=\"card-body\" style={{ display: 'block', paddingLeft: ' 0rem' }}>\r\n            <h5 className=\"card-title\">{props.data.name}</h5>\r\n            <table className=\"table\"\r\n              style={{ fontSize: '1rem', tableLayout: 'fixed' }}>\r\n              <tbody>\r\n                <tr style={{ border: '0' }}>\r\n                  <th scope=\"col\" className=\"char-id\">ID:{props.data.id}</th>\r\n                  <th scope=\"col\" className=\"char-cdate\">Created {props.createdDate}</th>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"col\">SPECIES</th>\r\n                  <th scope=\"col\" className=\"char-species\">{props.data.species}</th>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"col\">STATUS</th>\r\n                  <th scope=\"col\" className=\"char-status\">{props.data.status}</th>\r\n                </tr>\r\n                <tr>\r\n                  <td>GENDER</td>\r\n                  <td className=\"char-gender\">{props.data.gender}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>ORIGIN</td>\r\n                  <td className=\"char-origin\">{props.data.origin.name}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>LAST LOCATION</td>\r\n                  <td className=\"char-loc\">{props.data.location.name}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      \r\n      )\r\n  } else {\r\n    return (\r\n      <div>\r\n        <p className=\"d-flex text-danger\">\r\n          No results Found!\r\n          </p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n};\r\n\r\n\r\nexport default Character;","import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\nimport Character from '../../components/Character/Character';\r\nimport style from './CharacterDetails.css';\r\n\r\nexport default class CharacterDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    calculateCreatedDate = (createdDate) => {\r\n        var today = moment(new Date()).format();\r\n        var lastCreated = moment(createdDate).subtract(today, 'YYYYMMDD').fromNow();\r\n        return lastCreated;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n            \r\n                <div className=\"row\">\r\n                    {\r\n                        (this.props.characterData && this.props.characterData.length > 0) ?\r\n                            (this.props.characterData.map((eachChar, index) => {\r\n                                return (\r\n                                    <div key={index} className=\"col-md-4 d-flex\">\r\n                                        <Character data={eachChar} createdDate={this.calculateCreatedDate(eachChar.created)} ></Character>\r\n                                    </div>\r\n                                )\r\n                            })) : (\r\n                                <Character noResult={true}></Character>\r\n                            )\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\n// import axios from '../../axios-data'\r\nimport CharacterDetails from '../CharacterDetails/CharacterDetails';\r\nimport fetchCharacters from '../../store/actions/characters';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nexport  class CharacterDataBuilder extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { }\r\n    }\r\n    componentDidMount() {\r\n      this.props.add_service('','','');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h1>\r\n                <CharacterDetails characterData={this.props.characters.characters}></CharacterDetails>\r\n            </h1>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    characters : state.characters\r\n  });\r\n  \r\n  const mapDispatchToProps = {\r\n    add_service : fetchCharacters\r\n  };\r\n  \r\n  \r\n  const AppContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(CharacterDataBuilder);\r\n  \r\n  export default AppContainer;\r\n","import { ADD_NAME} from \"../types/types\";\r\n\r\nexport   const addName = (payload) => {\r\n    return {\r\n        type: ADD_NAME,\r\n        payload: payload\r\n    };\r\n\r\n}\r\n\r\n\r\nexport default addName;\r\n\r\n","import {\r\n    ADD_ORDER_BY\r\n} from '../types/types';\r\n\r\n\r\n\r\nconst addOrderBy = (payload) => {  \r\n    return {\r\n        type: ADD_ORDER_BY,\r\n        payload: payload\r\n    };\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default addOrderBy;","import { ADD_TOTAL_PAGE} from \"../types/types\";\r\n\r\n\r\nexport   const addTotalPage = (payload) => {\r\n    \r\n\r\n    return {\r\n        type: ADD_TOTAL_PAGE,\r\n        payload: payload\r\n    };\r\n\r\n}\r\n\r\n\r\nexport default addTotalPage;\r\n\r\n","import React, { Component } from 'react';\r\nimport style from './PaginationComp.css'\r\nimport Pagination from \"react-js-pagination\";\r\nimport fetchCharacters from '../../store/actions/characters';\r\nimport { connect } from \"react-redux\";\r\nimport { addCurrentPage } from '../../store/actions/currentPage';\r\nimport addTotalPage from '../../store/actions/totalPage';\r\n\r\nexport class PaginationComp extends Component {\r\n\r\n    handlePageChange(pageNumber) {\r\n        this.props.add_currentPage(pageNumber);\r\n        this.props.get_characters();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.navpage}>\r\n                <Pagination\r\n                    activeLinkClass={`${style.activeitem}`}\r\n                    activeClass={`${style.activeitem}`}\r\n                    disabledClass={`${style.pageItem} `}\r\n                    itemClass={`${style.pageItem} page-item`}\r\n                    linkClass={`${style.pageItem} page-link`}\r\n                    activePage={this.props.currentPage.currentPage}\r\n                    itemsCountPerPage={20}\r\n                    totalItemsCount={this.props.totalPage.totalPage || 1}\r\n                    pageRangeDisplayed={3}\r\n                    onChange={this.handlePageChange.bind(this)}\r\n                />\r\n            </div>\r\n        )\r\n        // page-item,page-link\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currentPage: state.currentPage,\r\n    totalPage: state.totalPage\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    get_characters: fetchCharacters,\r\n    add_totalpage: addTotalPage,\r\n    add_currentPage: addCurrentPage\r\n};\r\n\r\nconst AppContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PaginationComp);\r\n\r\nexport default AppContainer;","import React, { Component } from 'react';\r\nimport Aux from '../../HOC/Aux_container';\r\nimport Header from '../../components/Header/Header';\r\nimport SideFilter from '../../containers/SideFilter/SideFilter'\r\nimport SearchHeaderBar from '../../components/SearchHeaderBar/SearchHeaderBar'\r\nimport CharacterDataBuilder from '../CharacterDataBuilder/CharacterDataBuilder'\r\nimport style from './Layout.css'\r\nimport addName from '../../store/actions/name'\r\nimport fetchCharacters from '../../store/actions/characters';\r\nimport addOrderBy from '../../store/actions/sort';\r\nimport PaginationComp from '../PaginationComp/PaginationComp'\r\nimport { connect } from \"react-redux\";\r\nimport { addSpecies, deleteSpecies } from '../../store/actions/species';\r\nimport { addGender, deleteGender } from '../../store/actions/gender';\r\nimport { addStatus, deleteStatus } from '../../store/actions/status';\r\nimport addCharacterType from '../../store/actions/characterType';\r\nimport { resetCurrentPage } from '../../store/actions/currentPage';\r\n\r\n// import store from '../../store/store'\r\n\r\nexport class Layout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    getData = (data) => {\r\n        this.props.add_name(data);\r\n        this.props.reset_currentPage();\r\n        this.props.get_characters();\r\n    }\r\n\r\n    getOrder = (data) => {\r\n        var orderBy = data;\r\n        this.props.add_orderBy(orderBy);\r\n        this.props.get_characters();\r\n    }\r\n\r\n    removeSelectedFilter = (data) => {\r\n        (data === 'species') ? this.props.delete_species(data) : (data === 'gender') ? this.props.delete_gender(data) : this.props.delete_status(data)\r\n        this.removeChecked(data);\r\n        this.props.reset_currentPage();\r\n        this.props.get_characters();\r\n\r\n    }\r\n\r\n\r\n    removeChecked = (type) => {\r\n        var checkVals = [];\r\n        var rowdata = this.props.characterType.characterType.find(x => String(x.type).toLowerCase() === type);\r\n        // Replacing the isClicked state of the clicked element\r\n        rowdata.data.forEach(element => {\r\n            element.isChecked = false;\r\n            checkVals.push(element);\r\n        });\r\n        // Replacing the data field of specific type which is clicked\r\n        var tempstate = this.props.characterType.characterType;\r\n        tempstate.map(x => { return ((x.type) === type ? x.data = checkVals : x) })\r\n        this.props.add_characterType(tempstate);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Header />\r\n               {  this.props.loader && this.props.loader.loader ?\r\n                    <div className={style.overlay}>\r\n                        <div className={style.loader}></div>\r\n                    </div> : null\r\n               }\r\n                <div className=\"container-fluid \">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-3 col-sm-4 col-md-12 p-0\">\r\n                            <div className=\"col-md-12\">\r\n                                <SideFilter updatedFilter={this.props}></SideFilter>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-9\">\r\n                            <div className={style.jumbo} >\r\n                                <SearchHeaderBar\r\n                                    removeSelectedFilter={this.removeSelectedFilter}\r\n                                    getData={this.getData}\r\n                                    getOrder={this.getOrder}\r\n                                    speciesFilter={this.props.species}\r\n                                    genderFilter={this.props.gender}\r\n                                    statusFilter={this.props.status}\r\n                                />\r\n                            </div>\r\n                            <hr></hr>\r\n                            <main>\r\n                                <CharacterDataBuilder></CharacterDataBuilder>\r\n                                <PaginationComp></PaginationComp>\r\n                            </main>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nconst mapStateToProps = state => ({\r\n    characters: state.characters,\r\n    name: state.name,\r\n    species: state.species,\r\n    gender: state.gender,\r\n    status: state.status,\r\n    characterType: state.characterType,\r\n    loader: state.loader\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    add_name: addName,\r\n    add_species: addSpecies,\r\n    delete_species: deleteSpecies,\r\n    add_gender: addGender,\r\n    delete_gender: deleteGender,\r\n    add_status: addStatus,\r\n    delete_status: deleteStatus,\r\n    get_characters: fetchCharacters,\r\n    add_orderBy: addOrderBy,\r\n    add_characterType: addCharacterType,\r\n    reset_currentPage: resetCurrentPage\r\n};\r\n\r\n\r\n\r\nconst AppContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Layout);\r\n\r\nexport default AppContainer;\r\n","import React from 'react';\nimport './App.css';\nimport Layout from './containers/Layout/Layout'\n\nfunction App() {\n  return (\n    <div>\n        <Layout></Layout>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import 'bootstrap/dist/css/bootstrap.css';\n// import 'bootstrap/dist/js/bootstrap.js';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/store';\nimport { Provider } from 'react-redux';\nimport { ApolloProvider } from '@apollo/react-hooks';\n\nimport client  from './connect'\n\n\n\n\n\nReactDOM.render(\n\n  <Provider store={store}>\n  <ApolloProvider client={client} >\n        <App />\n  </ApolloProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}